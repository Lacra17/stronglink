#!/usr/bin/env node
var sln = require("../sln-client");
var repo = sln.mainRepo();
if(!repo) {
	console.error("No StrongLink repository configured");
	process.exit(1);
}

if(process.argv.length < 3) {
	console.error("Usage: "+process.argv[1]+" <tags> <query>");
	process.exit(1);
}
var query = process.argv.slice(-1)[0];
var meta = {
	"tag": process.argv.slice(2, -1),
};


// TODO: HACK
// See sln-add-tags if you want to know the normal way to do this.
// This version queries for EVERYTHING in natural order, and then checks
// each result one-by-one to see if they match. The end result is that the
// new tags are added in the same order as the original files, which is what
// you want in some cases.
// Problems with this approach:
// - It can be very slow (linear table scan plus request per file)
// - `URI+" "+query` is not guaranteed to work depending on what `query` is
//   (using the JSON-based query language instead will fix this)

var stream = repo.createQueryStream("", { wait: false });
stream.on("data", function(URI) {
	stream.pause();
	repo.query(URI+" "+query, { count: 1 }, function(err, list) {
		if(err) throw err;
		if(!list.length) {
			stream.resume();
			return;
		}
		repo.submitMeta(URI, meta, function(err, obj) {
			if(err) throw err;
			stream.resume();
			console.log(URI);
		});
	});
});

